html, body, #app {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    user-select: none;
    white-space: nowrap;
    background: rgb(236, 236, 236);
}

.v-row {
    display: flex;
    align-items: center;
}

.v-column {
    display: flex;
    flex-direction: column;
}

/****************** Header-TitleBar ***********************/
.title-bar {
    -webkit-app-region: drag;
    font-size: 14px;
}

.title-bar .icon, .title-bar .user-name, .title-bar .text-field {
    -webkit-app-region: none;
}

.window-state-bar {
    flex: 1;
    justify-content: flex-end;

    --icon-fill-base: unset;
    --icon-fill-hover: unset;
}

.window-state-bar.viewer {
    font-size: 14px;
    -webkit-app-region: drag;

    --icon-fill-base: rgb(210, 210, 210);
    --icon-fill-hover: rgb(245, 108, 108);
}

.window-state-bar > .icon {
    margin: 2px 8px;
    padding: 6px;
    width: 1em;
    height: 1em;
    fill: var(--icon-fill-base);
}

.window-state-bar > .icon:hover {
    fill: var(--icon-fill-hover);
}

.window-state-bar > .separator {
    height: 1em;
    display: flex;
    margin: 0 0.5em;
    border-left: 2px solid #222;
}

.window-state-bar:not(.viewer) > .icon:hover {
    background: rgba(210, 212, 216, 0.8);
}

.window-state-bar:not(.viewer) > .icon.close:hover {
    background: rgb(232, 17, 35);
    fill: white;
}

.window-state-bar.viewer > .icon {
    width: 1.5em;
    height: 1.5em;
    cursor: pointer;
    -webkit-app-region: none;
}

/* 设置间距,用以鼠标在窗口边沿操作(如缩放) 在Electron16开始不需要设置此样式,也可以在窗口边缘resize */
/*.title-bar.un-maximized { margin: 2px 2px 0 2px;}*/

.title-bar .user-icon.cover {
    width: 40px;
    height: 40px;
    background: none;
    border-radius: 50%;
}

.title-bar .user-icon.icon {
    width: 40px;
    height: 40px;
    background: white;
    border-radius: 50%;
    fill: rgb(188, 191, 193);
}

.title-bar .user-name {
    margin: 0 8px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    font-size: 13px;
}

.title-bar .icon.disabled {
    opacity: 0.2;
    pointer-events: none;
}

.title-bar > .option-container > .icon {
    margin: 0 4px;
    padding: 6px;
    width: 1em;
    height: 1em;
}

.title-bar > .option-container > .icon:hover {
    background: rgba(210, 212, 216, 0.8);
}

.fixed-left-bar {
    flex: none;
    width: 200px;
    /*
        border-box :元素实际部分为指定的宽高 (内容部分 = 指定的为实际宽高 - 边框 - 内边距)
        content-box:元素内容部分为指定的宽高 (实际部分 = 指定的为内容宽高 + 边框 + 内边距)
     */
    box-sizing: border-box;
    background: rgb(241, 241, 241);
}

.tab-pane {
    flex: auto;
    display: flex;
    overflow: hidden;
}

.tab-pane .tab {
    display: flex;
    padding: 10px 20px;
    align-items: center;
    gap: 0 12px;
    cursor: pointer;
    font-size: 15px;
    color: var(--tab-text-base);
}

.tab-pane .tab > .icon {
    fill: var(--tab-text-base);
}

.tab-pane .tab:hover {
    background: var(--tab-fill-hover);
}

.tab-pane .tab.active {
    color: var(--tab-text-active);
    background: var(--tab-fill-active);
}

.tab-pane .tab.active > .icon {
    fill: var(--tab-text-active);
}

.tab-pane > .tab-content {
    flex: auto;
    overflow: hidden;
    box-sizing: border-box;
    padding: 20px 0 0 16px;
}

.tab-pane.v-column .tab-content {
    padding: 1em 0 0 0;
}

.tab-pane.v-column .tab-container .tab {
    padding: 0;
    height: 2em;
    width: 4.5em;
    background: none;
    flex-direction: column;
    color: var(--tab-horizontal-text-base);
}

.tab-pane.v-column .tab-container .tab:not(:last-child) {
    margin: 0 2.5em 0 0;
}

.tab-pane.v-column .tab-container .tab:after {
    content: '';
    height: 3px;
    width: 100%;
    display: block;
    transform: scaleX(0);
    margin: 0.25em 0 0 0;
    background: var(--tab-horizontal-fill-base);
    transition: transform 0.3s ease-in-out;
}

.tab-pane.v-column .tab-container .tab:hover:after {
    transform: scaleX(1);
}

.tab-pane.v-column .tab-container .tab.active {
    color: var(--tab-horizontal-text-active);
}

.tab-pane.v-column .tab-container .tab.active:after {
    transform: none;
    transition: none;
}

/********************* MediaControl(Footer) **********************/
.media-control {
    font-size: 14px;
    --icon-fill-base: var(--fill-base);
    --stroke-icon-fill-base: var(--fill-base);

    color: var(--text-base);
}

.media-control.viewer {
    --slider-filler-fill: rgb(226, 155, 208);
    --slider-thumb-fill: rgb(226, 155, 208);
    --slider-buffer-fill: rgb(210, 210, 210);

    --icon-fill-base: rgb(210, 210, 210);
    --stroke-icon-fill-base: var(--icon-fill-base);

    color: white;

    margin: 0 0 4px 0;
}

.media-control .album-icon {
    width: 4em;
    height: 4em;
    border-radius: 6px;
    cursor: pointer;
    margin: 0 4px 2px 2px;
}

.media-control .stroke-icon {
    z-index: 1;
    cursor: pointer;
    padding: 1px 10px;
    border-radius: 1.25em;
    color: var(--stroke-icon-fill-base);
    border: 1px solid var(--stroke-icon-fill-base);
}

.media-control .icon {
    z-index: 1;
    cursor: pointer;
    fill: var(--icon-fill-base);
}

/* [属性名^='值'] 匹配开始的值,   [属性名$='值'] 匹配结束的值   [属性名*='值'] 匹配包含的值 */
/*.popover[class*='-control']*/
.popover.volume-control, .popover.speed-control, .popover.mode-control {
    align-items: center;
    justify-content: center;
    background: var(--popover-inner-fill);
    color: var(--text-active);
    border-radius: 6px;
    padding: 12px 8px;
    box-sizing: border-box;
    /* transition-property, transition-duration, transition-timing-function, and transition-delay. */
    /* transition: visibility 1s ease; visibility: collapse; */
}

/* 音量弹出式面板 */
.popover.volume-control {
    height: 150px;
    width: 54px;
}

.popover.speed-control {
    height: 150px;
    width: 54px;
    align-items: stretch;
}

/* 播放模式弹出式面板 */
.popover.mode-control {
    width: 102px;
    padding: 2px 0;
    white-space: nowrap;
    fill: var(--fill-base);
}

.popover.mode-control > .v-row {
    width: 100%;
    cursor: pointer;
    padding: 8px 4px;
    box-sizing: border-box;
    justify-content: center;
    font-size: 12px;
    gap: 8px;
}

.popover.mode-control > .v-row:not(:last-child) {
    border-bottom: 1px solid var(--popover-mode-border-fill);
}

.popover.mode-control > .v-row:hover {
    background: var(--popover-mode-fill-hover);
}

.popover.play-queue {
    /*position: absolute;*/
    top: 4px;
    right: 0;
    bottom: 4px;
    width: 40vw;
    gap: 8px;
    padding: 8px;
    /*background: var(--popover-inner-fill);*/
    /*--text-base: white;*/

    opacity: 1;
    transition: transform .3s ease-in-out;
    transform: translate3d(100%, 0, 0);
}

.popover.play-queue.expand {
    transform: translate3d(0, 0, 0);
}

.popover.play-queue > .v-row {
    padding: 8px;
}

.popover.play-queue > .title {
    justify-content: space-between;
    /* 弹出层中的图标填充色 */
    --icon-fill-base: #f56c6c;
}

.popover.play-queue > .option-bar {
    /* 弹出层中的图标填充色 */
    --icon-fill-base: white;
    gap: 8px;
}

.popover.play-queue > .option-bar > .song-count-label {
    flex: 1;
}


/* 设置图片不可拖动 */
.cover {
    -webkit-user-drag: none;
}

.data-container {
    align-items: stretch;
    color: var(--text-base);
}

.data-container .cover {
    width: 13em;
    height: 13em;
    border-radius: 50%;
}

.data-container .v-column {
    justify-content: space-around;
    margin: 1em;
}

.data-container .statistic-item:nth-child(n + 2)::before {
    content: '|';
    margin: 0 1.5em;
}

.data-container .button {
    margin: 0 1.5em 0 0;
}

.table .table-cell > .icon.mv-icon {
    flex: none;
    fill: #eb5183;
    margin: 0 0 0 0.25em;
    cursor: pointer;
}

.table .table-cell > .icon.vip-icon {
    flex: none;
    fill: #eb5183;
    margin: 0 0 0 0.25em;
    width: 1.5em;
    height: 1.5em;
}

/****************** 登录模态框 ***********************/
#login-modal > .modal-content > .content > #qq-input {
    flex: 1;
    outline: none;
    resize: none;
    font-size: 18px;
    border: none;
    width: 100%;
    color: #c73d3d;
    border-radius: 0.25em;
    background: rgb(245, 245, 245);
}

#login-modal > .modal-content > .content > .button {
    color: white;
    margin: 1em 0.25em 0;
    font-size: 18px;
    cursor: pointer;
    padding: 6px 12px;
    border-radius: 25px;
    background: rgb(226, 155, 208);
    width: 300px;
}

#timer-modal .content {
    color: var(--text-base);
}

#timer-modal .content > .v-column > .v-row {
    margin: 0.5em 0;
}

#timer-modal .content .text-field {
    margin: 0 0 0 1em;
}

#timer-modal .content .button {
    width: 30%;
    font-size: 18px;
    border-radius: 1em;
    background: rgb(226, 155, 208);
}

.cover--rect-inner {
    /*flex: 1;*/
    margin: 0 20px;
    max-width: 360px;
    min-width: 100px;
    max-height: 360px;
    min-height: 100px;
    height: 100%;
    border-radius: 12px;
}

/************************ LyricView ******************************/
.lyric-view {
    display: flex;
    flex-direction: column;
    overflow: hidden;
    cursor: grab;
    mask-image: linear-gradient(180deg, #fff0 0, #fff9 15%, #fff 25%, #fff 75%, #fff9 85%, #fff0);
}

.lyric-view.empty {
    cursor: default;
    align-items: center;
    justify-content: center;
}

.lyric-view.empty::after {
    color: white;
    padding: 12px;
    font-size: 22px;
    /* CSS表达式 attr() 用来获取选择到的元素的某一HTML属性值, 并用于其样式 */
    content: attr(data-placeholder);
}

.lyric-view > .content-wrapper.animation {
    transition: transform 0.1s ease-out;
}

.lyric-view > .content-wrapper > .lyric-item {
    text-align: center;
    font-size: 18px;
    color: white;
    padding: 12px 0;
    white-space: pre-wrap;
    transition: transform 0.1s ease-out;
}

.lyric-view > .content-wrapper > .lyric-item.active {
    color: rgb(226, 155, 208);
    transform: scale(1.5);
}

/************************ Effect-Cover ******************************/
.music-viewer {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    overflow: hidden;
    /*background-color: black;*/
    /*background: rgb(224, 224, 224);*/
    background: rgb(100, 100, 100);
    /*rgb(250,235,215)*/
    /*FAEBD7FF*/
}

.music-viewer > .effect-cover {
    position: absolute;
    width: 100%;
    height: 100%;
    /*filter: blur(150px);*/
    /*filter: blur(60px) brightness(60%);*/
    filter: blur(60px);
    opacity: 0.6;
    z-index: -9;
}

.music-viewer .data-media {
    color: white;
    font-size: 16px;
    justify-content: center;
    margin: 0 0 1em 0;
    gap: 8px;
}

.data-media .link {
    cursor: pointer;
}

.music-viewer .data-media .mv-icon {
    fill: #ffc100;
    width: 1em;
    height: 1em;
}